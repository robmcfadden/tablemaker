!function($){Craft.TableMaker=Garnish.Base.extend({columnsTableId:null,rowsTableId:null,columnsTableName:null,rowsTableName:null,columnsTableInputPath:null,rowsTableInputPath:null,columns:null,rows:null,columnSettings:null,fieldId:null,columnsTable:null,rowsTable:null,$columnsTable:null,$rowsTable:null,$input:null,init:function(t,s,e,a,l,o,n,i){this.columnsTableId=s,this.rowsTableId=e,this.columnsTableName=a,this.rowsTableName=l,this.columnsTableInputPath=this.columnsTableName.replace(/]/g,"").split("["),this.rowsTableInputPath=this.rowsTableName.replace(/]/g,"").split("["),this.columns=o,this.rows=n,this.columnSettings=i,this.fieldId=t,this.$columnsTable=$("#"+this.columnsTableId),this.$rowsTable=$("#"+this.rowsTableId),this.$input=$("#"+t+"-field").find("input.table-maker-field"),this.initColumnsTable(),this.initRowsTable(),this.makeDataBlob()},onColumnsAddRow:function(){this.bindColumnsTableChanges(),this.reconstructRowsTable()},onRowsAddRow:function(){this.bindRowsTableTextChanges(),this.makeDataBlob()},bindColumnsTableChanges:function(){var t=this.columnsTable.$tbody.find("textarea");this.addListener(t,"textchange","reconstructRowsTable");var s=this.columnsTable.$tbody.find("select");this.addListener(s,"change","reconstructRowsTable")},bindRowsTableTextChanges:function(){var t=this.rowsTable.$tbody.find("textarea");this.addListener(t,"textchange","makeDataBlob")},initColumnsTable:function(){this.columnsTable=new Craft.EditableTable(this.columnsTableId,this.columnsTableName,this.columnSettings,{rowIdPrefix:"col",allowAdd:!0,allowDelete:!0,allowReorder:!0,onAddRow:$.proxy(this,"onColumnsAddRow"),onDeleteRow:$.proxy(this,"reconstructRowsTable")}),this.bindColumnsTableChanges(),this.columnsTable.sorter.settings.onSortChange=$.proxy(this,"reconstructRowsTable")},initRowsTable:function(){this.rowsTable=new Craft.EditableTable(this.rowsTableId,this.rowsTableName,this.columns,{rowIdPrefix:"row",allowAdd:!0,allowDelete:!0,allowReorder:!0,onAddRow:$.proxy(this,"onRowsAddRow"),onDeleteRow:$.proxy(this,"makeDataBlob")}),this.bindRowsTableTextChanges(),this.rowsTable.sorter.settings.onSortChange=$.proxy(this,"makeDataBlob")},reconstructRowsTable:function(){this.getDataFromTables();var t="<thead><tr>";for(var s in this.columns)this.columns[s].type="singleline",t+='<th scope="col" class="header">'+(this.columns[s].heading?this.columns[s].heading:"&nbsp;")+"</th>";t+='<th class="header" colspan="2"></th></tr></thead>';var e=$("<table/>",{id:this.rowsTableId,class:"editable fullwidth"}).append(t),a=$("<tbody/>").appendTo(e);for(var l in this.rows)this.rows.hasOwnProperty(l)&&Craft.EditableTable.createRow(l,this.columns,this.rowsTableName,this.rows[l]).appendTo(a);this.rowsTable.$table.replaceWith(e),this.rowsTable.destroy(),delete this.rowsTable,this.initRowsTable(this.columns),this.makeDataBlob()},getDataFromTables:function(){var t=Craft.expandPostArray(Garnish.getPostData(this.columnsTable.$tbody)),s=Craft.expandPostArray(Garnish.getPostData(this.rowsTable.$tbody));if(!$.isEmptyObject(t))for(var e=0;e<this.columnsTableInputPath.length;e++){var a;t=t[a=this.columnsTableInputPath[e]]}if(this.columns=t,!$.isEmptyObject(s))for(var e=0;e<this.rowsTableInputPath.length;e++){var a;s=s[a=this.rowsTableInputPath[e]]}this.rows=s},makeDataBlob:function(){this.getDataFromTables();var t={columns:this.columns,rows:this.rows};this.$input.val(JSON.stringify(t))}})}(jQuery);
//# sourceMappingURL=tablemaker.js.map